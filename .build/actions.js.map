{
  "version": 3,
  "sources": ["../actions.ts"],
  "sourcesContent": ["import { TelegramClient } from \"telegram\";\nimport { NewMessageEvent } from \"telegram/events\";\nimport ban from \"./actions/ban\";\nimport mute from \"./actions/mute\"\nimport info from \"./actions/info\";\nimport unmute from \"./actions/unmute\"\nimport { Upt } from \"./strt\";\nimport help from \"./actions/help\";\nimport kick from \"./actions/kick\";\nimport unban from \"./actions/unban\";\nimport clone from \"./actions/clone\";\nimport smute from \"./actions/smute\";\nimport ping from \"./ping\";\nimport Chk from \"./helpers/chk\";\nimport kill from \"./art/kill\";\nimport yt from \"./actions/yt\";\nimport settings from \"./bot/settings\";\nimport timer from \"./actions/timer\"\nimport helpb, { hlp } from \"./bot/help\";\nimport vc, { endvc, joinvc } from \"./bot/vc\";\n\nconst actions = async (client: TelegramClient, e: NewMessageEvent, upt: Upt, bot: any) => {\n    const y = new Chk(client, e)\n    try {\n        // Declarations\n        const m = e.message\n        const chatId = m.chatId as import(\"big-integer\").BigInteger\n        // var message = await client.sendMessage(chatId, { message: \"runnig.....\" });\n\n        if (m.message.includes(upt.strt + 'mute'))\n            await mute(client, e, upt)\n\n        if (m.message.includes(upt.strt + 'unmute'))\n            await unmute(client, e, upt)\n\n        if (m.message.includes(upt.strt + 'info'))\n            await info(client, e, upt)\n\n        if (m.message.includes(upt.strt + 'ban'))\n            await ban(client, e, upt)\n\n        // if (m.message.includes(upt.strt + 'help'))\n        //     await help(client, e, upt)\n\n        if (m.message.includes(upt.strt + 'kick'))\n            await kick(client, e, upt)\n\n        if (m.message.includes(upt.strt + 'unban'))\n            await unban(client, e, upt)\n\n        if (m.message.includes(upt.strt + 'clone'))\n            await clone(client, e, upt)\n\n        if (m.message.includes(upt.strt + 'init'))\n            await y.innit()\n\n        // if (m.message.includes(upt.strt + 'settings') || m.message.includes(upt.strt + 'set'))\n        //     await settings(client, e)\n\n        if (m.message.includes(upt.strt + 'ping'))\n            ping(client, e, upt)\n\n        if (m.message.includes(upt.strt + 'yt'))\n            await yt(client, e)\n\n        if (m.message.includes(upt.strt + 'kill'))\n            await kill(client, e, upt)\n\n        if (m.message.includes(upt.strt + 'setdel'))\n            await y.setdel()\n\n        if (m.message.includes(upt.strt + 'set') || m.message.includes(upt.strt + 'settings'))\n            await settings(client, e, bot)\n\n        if (m.message.includes(upt.strt + 'help') || m.message.includes(upt.strt + 'hlp'))\n            await hlp(client, e)\n\n            if (m.message.includes(upt.strt + 'vc'))\n            await vc(client, e)\n\n            if (m.message.includes(upt.strt + 'endvc'))\n            await endvc(client, e)\n\n            if (m.message.includes(upt.strt + 'joinvc'))\n            await joinvc(client, e)\n\n               if (m.message.includes(upt.strt + 'timer'))\n            await timer(client, e)\n\n    } catch (error: any) {\n        console.log(`Actions: ${error.message}`)\n        y.edit(error.message)\n    }\n}\n\nexport default actions"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,iBAAgB;AAChB,kBAAiB;AACjB,kBAAiB;AACjB,oBAAmB;AAGnB,kBAAiB;AACjB,mBAAkB;AAClB,mBAAkB;AAElB,kBAAiB;AACjB,iBAAgB;AAChB,kBAAiB;AACjB,gBAAe;AACf,sBAAqB;AACrB,mBAAkB;AAClB,IAAAA,eAA2B;AAC3B,gBAAkC;AAElC,MAAM,UAAU,OAAO,QAAwB,GAAoB,KAAU,QAAa;AACtF,QAAM,IAAI,IAAI,WAAAC,QAAI,QAAQ,CAAC;AAC3B,MAAI;AAEA,UAAM,IAAI,EAAE;AACZ,UAAM,SAAS,EAAE;AAGjB,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,MAAM;AACpC,gBAAM,YAAAC,SAAK,QAAQ,GAAG,GAAG;AAE7B,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,QAAQ;AACtC,gBAAM,cAAAC,SAAO,QAAQ,GAAG,GAAG;AAE/B,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,MAAM;AACpC,gBAAM,YAAAC,SAAK,QAAQ,GAAG,GAAG;AAE7B,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,KAAK;AACnC,gBAAM,WAAAC,SAAI,QAAQ,GAAG,GAAG;AAK5B,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,MAAM;AACpC,gBAAM,YAAAC,SAAK,QAAQ,GAAG,GAAG;AAE7B,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,OAAO;AACrC,gBAAM,aAAAC,SAAM,QAAQ,GAAG,GAAG;AAE9B,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,OAAO;AACrC,gBAAM,aAAAC,SAAM,QAAQ,GAAG,GAAG;AAE9B,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,MAAM;AACpC,YAAM,EAAE,MAAM;AAKlB,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,MAAM;AACpC,sBAAAC,SAAK,QAAQ,GAAG,GAAG;AAEvB,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,IAAI;AAClC,gBAAM,UAAAC,SAAG,QAAQ,CAAC;AAEtB,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,MAAM;AACpC,gBAAM,YAAAC,SAAK,QAAQ,GAAG,GAAG;AAE7B,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,QAAQ;AACtC,YAAM,EAAE,OAAO;AAEnB,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,KAAK,KAAK,EAAE,QAAQ,SAAS,IAAI,OAAO,UAAU;AAChF,gBAAM,gBAAAC,SAAS,QAAQ,GAAG,GAAG;AAEjC,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,MAAM,KAAK,EAAE,QAAQ,SAAS,IAAI,OAAO,KAAK;AAC5E,gBAAM,kBAAI,QAAQ,CAAC;AAEnB,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,IAAI;AACtC,gBAAM,UAAAC,SAAG,QAAQ,CAAC;AAElB,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,OAAO;AACzC,gBAAM,iBAAM,QAAQ,CAAC;AAErB,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,QAAQ;AAC1C,gBAAM,kBAAO,QAAQ,CAAC;AAEnB,QAAI,EAAE,QAAQ,SAAS,IAAI,OAAO,OAAO;AAC5C,gBAAM,aAAAC,SAAM,QAAQ,CAAC;AAAA,EAE7B,SAAS,OAAP;AACE,YAAQ,IAAI,YAAY,MAAM,SAAS;AACvC,MAAE,KAAK,MAAM,OAAO;AAAA,EACxB;AACJ;AAEA,IAAO,kBAAQ;",
  "names": ["import_help", "Chk", "mute", "unmute", "info", "ban", "kick", "unban", "clone", "ping", "yt", "kill", "settings", "vc", "timer"]
}
