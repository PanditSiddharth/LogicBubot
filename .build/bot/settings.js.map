{
  "version": 3,
  "sources": ["../../bot/settings.ts"],
  "sourcesContent": ["import { Markup } from \"telegraf\";\nimport { TelegramClient } from \"telegram\";\nimport { NewMessageEvent } from \"telegram/events\";\n\nconst settings = (client: TelegramClient, e: NewMessageEvent, bot: any) => {\n// // Create an inline keyboard\n// const inlineKeyboard = Markup.inlineKeyboard([[{text: \"text\", callback_data: \"1\"}]]);\n// // Start command handler\n// bot.on('message', (ctx : any, next: any) => {\n//   // Send a message with the inline keyboard\n//   ctx.reply('Hello!', inlineKeyboard);\n//   next()\n// });\n\n// // Callback query handler\n// bot.action('1', (ctx: any) => {\n//   // Respond to the callback query\n// //   ctx.answerCallbackQuery('You clicked the button!');\n// });\n\n// bot.on('inline_query', async (ctx: any) => {\n//     const query = ctx.inlineQuery.query;\n//     if (!query) {\n//       return;\n//     }\n  \n//     const results = [\n//       {\n//         type: 'article',\n//         id: '1',\n//         title: 'Button 1',\n//         description: 'Description for Button 1',\n//         input_message_content: {\n//           message_text: 'You chose Button 1',\n//         },\n//         reply_markup: {\n//           inline_keyboard: [\n//             [\n//               { text: 'Option A', callback_data: 'option_1' },\n//               { text: 'Option B', callback_data: 'option_2' },\n//             ],\n//           ],\n//         },\n//       }\n//     ];\n\n// // Main menu with buttons\n// const mainMenu = {\n//     inline_keyboard: [\n//       [{ text: 'Option 1', callback_data: 'option_1' }],\n//       [{ text: 'Option 2', callback_data: 'option_2' }],\n//     ],\n//   };\n  \n//   // Callback query handler\n//   bot.on('callback_query', (ctx: any) => {\n//     const data = ctx.callbackQuery.data;\n  \n//     // Handle button clicks\n//     if (data === 'option_1') {\n//       // Update the buttons and send a new message\n//       const newMenu = {\n//         inline_keyboard: [\n//           [{ text: 'Suboption 1', callback_data: 'suboption_1' }],\n//           [{ text: 'Suboption 2', callback_data: 'suboption_2' }],\n//         ],\n//       };\n//       ctx.editMessageText('You selected Option 1', {\n//         reply_markup: newMenu,\n//       });\n//     } else if (data === 'option_2') {\n//       // Update the buttons and send a new message\n//       const newMenu = {\n//         inline_keyboard: [\n//           [{ text: 'Suboption 3', callback_data: 'suboption_3' }],\n//           [{ text: 'Suboption 4', callback_data: 'suboption_4' }],\n//         ],\n//       };\n//       ctx.editMessageText('You selected Option 2', {\n//         reply_markup: newMenu,\n//       });\n//     } else {\n//       // Handle suboption clicks\n//       ctx.answerCallbackQuery(`You selected ${data}`);\n//     }\n//   });\n  \n//   bot.on('message', (ctx : any, next: any) => {\n//     // Send a message with the inline keyboard\n//     ctx.reply('Main Menu', {\n//         reply_markup: mainMenu,\n//       });\n//     next()\n//   });\n\n\n// //   // Start command handler\n// //   bot.start((ctx: any) => {\n// //     // Send the main menu\n// //     ctx.reply('Main Menu', {\n// //       reply_markup: mainMenu,\n// //     });\n// //   });\n  \n//     ctx.answerInlineQuery(results);\n//   });\n  }\n\n  export default settings"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,MAAM,WAAW,CAAC,QAAwB,GAAoB,QAAa;AAsGzE;AAEA,IAAO,mBAAQ;",
  "names": []
}
