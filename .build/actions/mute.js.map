{
  "version": 3,
  "sources": ["../../actions/mute.ts"],
  "sourcesContent": ["import { Api, TelegramClient } from \"telegram\"\nimport { NewMessageEvent } from \"telegram/events\"\nimport { sleep } from \"../strt\"\nimport Chk from \"../helpers/chk\"\n\nconst mute = async (client: TelegramClient, e: NewMessageEvent, upt: any) => {\n  const y = new Chk(client, e)\n  try {\n    const m = e.message\n    let usr: any = await y.chk()\n\nif (!m?.isChannel)\n     return await y.edit('This command is group/channels specific')\n\n     let lt: any; try {\n      lt = await client.invoke(\n        new Api.channels.GetParticipant({\n          channel: m?.peerId,\n          participant: usr,\n        })\n      )\n    } catch (error) { }\n  \n  if (lt && (lt.participant.className == \"ChannelParticipantCreator\" || lt.participant.className == \"ChannelParticipantAdmin\")) {\n     return await y.edit(`I can't mute User is admin`)\n  }\n\n  if (lt && lt.participant.bannedRights && lt.participant.bannedRights.sendMessages == true)\n  return await y.edit(`User is already mute`)\n\n    let tim : any = await y.dtm()\n\n    const result = await client.invoke(\n        new Api.channels.EditBanned({\n          channel: await y.chat(),\n          participant: usr,\n          bannedRights: new Api.ChatBannedRights({\n            untilDate: Math.floor(Date.now() / 1000) + (tim && tim < 30 ? 30 : tim), // 1/2 minutes from now\n            viewMessages: false,\n            sendMessages: true,\n          }),\n        })\n      );\n\n      if (!lt)\n      return await y.edit(`User is not available in group [muted]`)\n      if(result)\n        await y.edit('User muted: ' +  (tim && tim >= 10 ? (tim >= 30 ? \" until: \" + tim + \" seconds\": '\\nMuting user 30 seconds\\nTg not allow to mute less than 30 seconds' ): \"\"));\n\n    } catch (error: any) {\n        console.log(\"Mute: \" + error.message)\n        await y.gperr(error.message)\n    }\n}\n\nexport default mute"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoC;AAGpC,iBAAgB;AAEhB,MAAM,OAAO,OAAO,QAAwB,GAAoB,QAAa;AAC3E,QAAM,IAAI,IAAI,WAAAA,QAAI,QAAQ,CAAC;AAC3B,MAAI;AACF,UAAM,IAAI,EAAE;AACZ,QAAI,MAAW,MAAM,EAAE,IAAI;AAE/B,QAAI,EAAC,uBAAG;AACH,aAAO,MAAM,EAAE,KAAK,yCAAyC;AAE7D,QAAI;AAAS,QAAI;AAChB,WAAK,MAAM,OAAO;AAAA,QAChB,IAAI,oBAAI,SAAS,eAAe;AAAA,UAC9B,SAAS,uBAAG;AAAA,UACZ,aAAa;AAAA,QACf,CAAC;AAAA,MACH;AAAA,IACF,SAAS,OAAP;AAAA,IAAgB;AAEpB,QAAI,OAAO,GAAG,YAAY,aAAa,+BAA+B,GAAG,YAAY,aAAa,4BAA4B;AAC3H,aAAO,MAAM,EAAE,KAAK,4BAA4B;AAAA,IACnD;AAEA,QAAI,MAAM,GAAG,YAAY,gBAAgB,GAAG,YAAY,aAAa,gBAAgB;AACrF,aAAO,MAAM,EAAE,KAAK,sBAAsB;AAExC,QAAI,MAAY,MAAM,EAAE,IAAI;AAE5B,UAAM,SAAS,MAAM,OAAO;AAAA,MACxB,IAAI,oBAAI,SAAS,WAAW;AAAA,QAC1B,SAAS,MAAM,EAAE,KAAK;AAAA,QACtB,aAAa;AAAA,QACb,cAAc,IAAI,oBAAI,iBAAiB;AAAA,UACrC,WAAW,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI,KAAK,OAAO,MAAM,KAAK,KAAK;AAAA,UACnE,cAAc;AAAA,UACd,cAAc;AAAA,QAChB,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAEA,QAAI,CAAC;AACL,aAAO,MAAM,EAAE,KAAK,wCAAwC;AAC5D,QAAG;AACD,YAAM,EAAE,KAAK,kBAAmB,OAAO,OAAO,KAAM,OAAO,KAAK,aAAa,MAAM,aAAY,wEAAyE,GAAG;AAAA,EAE/K,SAAS,OAAP;AACE,YAAQ,IAAI,WAAW,MAAM,OAAO;AACpC,UAAM,EAAE,MAAM,MAAM,OAAO;AAAA,EAC/B;AACJ;AAEA,IAAO,eAAQ;",
  "names": ["Chk"]
}
