{
  "version": 3,
  "sources": ["../../actions/kick.ts"],
  "sourcesContent": ["import { Api, TelegramClient } from \"telegram\"\nimport { NewMessageEvent } from \"telegram/events\"\nimport { sleep } from \"../strt\"\nimport Chk from \"../helpers/chk\"\n\nconst kcik = async (client: TelegramClient, e: NewMessageEvent, upt: any) => {\n  const y = new Chk(client, e)\n  try {\n    const m = e.message\n    let usr: any = await y.chk()\n\n    if (!m?.isChannel)\n      return await y.edit('This command is group/channels specific')\n\n    let lt: any; try {\n      lt = await client.invoke(\n        new Api.channels.GetParticipant({\n          channel: m?.peerId,\n          participant: usr,\n        })\n      )\n    } catch (error) { }\n\n    if (lt && (lt.participant.className == \"ChannelParticipantCreator\" || lt.participant.className == \"ChannelParticipantAdmin\")) {\n      return await y.edit(`I can't kick User is admin`)\n    }\n\n    if (!lt)\n    return await y.edit(`User is already kicked`)\n\n    await client.invoke(\n      new Api.channels.EditBanned({\n        channel: await y.chat(),\n        participant: usr,\n        bannedRights: new Api.ChatBannedRights({\n          untilDate: Math.floor(Date.now() / 1000),// 1/2 minutes from now\n          viewMessages: true,\n          // sendMessages: false,\n        }),\n      })\n    );\n\n    const result = await client.invoke(\n      new Api.channels.EditBanned({\n        channel: await y.chat(),\n        participant: usr,\n        bannedRights: new Api.ChatBannedRights({\n          untilDate: Math.floor(Date.now() / 1000), // 1/2 minutes from now\n          viewMessages: false,\n          // sendMessages: false,\n        }),\n      })\n    );\n\n\n    if (result)\n      await y.edit(\"User kicked\")\n\n  } catch (error: any) {\n    console.log(\"Kick: \" + error.message)\n    await y.gperr(error.message)\n  }\n}\n\nexport default kcik"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoC;AAGpC,iBAAgB;AAEhB,MAAM,OAAO,OAAO,QAAwB,GAAoB,QAAa;AAC3E,QAAM,IAAI,IAAI,WAAAA,QAAI,QAAQ,CAAC;AAC3B,MAAI;AACF,UAAM,IAAI,EAAE;AACZ,QAAI,MAAW,MAAM,EAAE,IAAI;AAE3B,QAAI,EAAC,uBAAG;AACN,aAAO,MAAM,EAAE,KAAK,yCAAyC;AAE/D,QAAI;AAAS,QAAI;AACf,WAAK,MAAM,OAAO;AAAA,QAChB,IAAI,oBAAI,SAAS,eAAe;AAAA,UAC9B,SAAS,uBAAG;AAAA,UACZ,aAAa;AAAA,QACf,CAAC;AAAA,MACH;AAAA,IACF,SAAS,OAAP;AAAA,IAAgB;AAElB,QAAI,OAAO,GAAG,YAAY,aAAa,+BAA+B,GAAG,YAAY,aAAa,4BAA4B;AAC5H,aAAO,MAAM,EAAE,KAAK,4BAA4B;AAAA,IAClD;AAEA,QAAI,CAAC;AACL,aAAO,MAAM,EAAE,KAAK,wBAAwB;AAE5C,UAAM,OAAO;AAAA,MACX,IAAI,oBAAI,SAAS,WAAW;AAAA,QAC1B,SAAS,MAAM,EAAE,KAAK;AAAA,QACtB,aAAa;AAAA,QACb,cAAc,IAAI,oBAAI,iBAAiB;AAAA,UACrC,WAAW,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AAAA,UACvC,cAAc;AAAA,QAEhB,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAEA,UAAM,SAAS,MAAM,OAAO;AAAA,MAC1B,IAAI,oBAAI,SAAS,WAAW;AAAA,QAC1B,SAAS,MAAM,EAAE,KAAK;AAAA,QACtB,aAAa;AAAA,QACb,cAAc,IAAI,oBAAI,iBAAiB;AAAA,UACrC,WAAW,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AAAA,UACvC,cAAc;AAAA,QAEhB,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAGA,QAAI;AACF,YAAM,EAAE,KAAK,aAAa;AAAA,EAE9B,SAAS,OAAP;AACA,YAAQ,IAAI,WAAW,MAAM,OAAO;AACpC,UAAM,EAAE,MAAM,MAAM,OAAO;AAAA,EAC7B;AACF;AAEA,IAAO,eAAQ;",
  "names": ["Chk"]
}
