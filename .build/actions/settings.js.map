{
  "version": 3,
  "sources": ["../../actions/settings.ts"],
  "sourcesContent": ["import { Api, TelegramClient } from \"telegram\"\nimport { NewMessageEvent } from \"telegram/events\"\nimport { sleep } from \"../strt\"\nimport { Upt } from \"../helpers\"\nconst { Button } = require(\"../node_modules/telegram/tl/custom/button\");\nimport Chk from \"../helpers/chk\";\n\nconst settings = async (client: TelegramClient, client1: TelegramClient, e: NewMessageEvent) => {\n    try {\n        const m: Api.Message = e.message\n\nconst resut: Api.messages.BotResults = await client.invoke(\n    new Api.messages.GetInlineBotResults({\n      bot: \"@node231bot\",\n      peer: \"@shabdt\",\n      query: \"bot\",\n      offset: \"@gif \",\n      geoPoint: new Api.InputGeoPoint({\n        lat: 8.24,\n        long: 8.24,\n        accuracyRadius: 1,\n      }),\n    })\n  );\n\nlet y =  new Chk(client, e)\n\nconst result2: any = await client.invoke(\n    new Api.messages.SendInlineBotResult({\n      peer: await y.chat(),\n      // randomId: resut.results[0].id,\n      queryId: resut.queryId,\n      id: resut.results[0].id,\n      hideVia: true,\n      scheduleDate: 0,\n      // sendAs: \"gif\",\n    })\n  );\n\n  console.log(result2.updates[2].message)\n  let med: any = result2.updates[2].message.media\n\n    } catch (error: any) {\n        console.log(\"settings: \" + error.message)\n    }\n}\n\nexport default settings"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoC;AAKpC,iBAAgB;AADhB,MAAM,EAAE,OAAO,IAAI,QAAQ,2CAA2C;AAGtE,MAAM,WAAW,OAAO,QAAwB,SAAyB,MAAuB;AAC5F,MAAI;AACA,UAAM,IAAiB,EAAE;AAEjC,UAAM,QAAiC,MAAM,OAAO;AAAA,MAChD,IAAI,oBAAI,SAAS,oBAAoB;AAAA,QACnC,KAAK;AAAA,QACL,MAAM;AAAA,QACN,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,UAAU,IAAI,oBAAI,cAAc;AAAA,UAC9B,KAAK;AAAA,UACL,MAAM;AAAA,UACN,gBAAgB;AAAA,QAClB,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAEF,QAAI,IAAK,IAAI,WAAAA,QAAI,QAAQ,CAAC;AAE1B,UAAM,UAAe,MAAM,OAAO;AAAA,MAC9B,IAAI,oBAAI,SAAS,oBAAoB;AAAA,QACnC,MAAM,MAAM,EAAE,KAAK;AAAA,QAEnB,SAAS,MAAM;AAAA,QACf,IAAI,MAAM,QAAQ,GAAG;AAAA,QACrB,SAAS;AAAA,QACT,cAAc;AAAA,MAEhB,CAAC;AAAA,IACH;AAEA,YAAQ,IAAI,QAAQ,QAAQ,GAAG,OAAO;AACtC,QAAI,MAAW,QAAQ,QAAQ,GAAG,QAAQ;AAAA,EAExC,SAAS,OAAP;AACE,YAAQ,IAAI,eAAe,MAAM,OAAO;AAAA,EAC5C;AACJ;AAEA,IAAO,mBAAQ;",
  "names": ["Chk"]
}
