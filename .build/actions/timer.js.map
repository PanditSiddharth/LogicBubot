{
  "version": 3,
  "sources": ["../../actions/timer.ts"],
  "sourcesContent": ["import {TelegramClient} from 'telegram';\nimport {NewMessageEvent} from 'telegram/events';\nimport Chk from '../helpers/chk'\n//import sleep from '../strt'\n\nlet timer = async (client: TelegramClient, e: NewMessageEvent)=>{\n  let y = new Chk(client, e)\n  let tim = await y.dtm() || 0\nconst sleep = (t: number | undefined) => new Promise((resolve) => setTimeout(resolve, t));\n  \n  y.edit((tim) + \" seconds left\", {d:false})\n  .then(async (mes: any)=>{\n    try{\n  for (let i: any = 0; i < tim; i+= 5) {\n      await sleep(5000)\n      let s = Math.floor((tim - i - 5)%60)\n      let m = Math.floor((tim - i - 5)/60)\n    await y.edit( m + \" Minutes :\" + s + \" seconds left\" , {d:false, id: mes.id});\n  }\n   y.edit(\"time end\",{id: mes.id});\n    } catch (err: any){\n      y.edit('timer error')\n    }\n  \n  })\n\n}\nexport default timer;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,iBAAgB;AAGhB,IAAI,QAAQ,OAAO,QAAwB,MAAqB;AAC9D,MAAI,IAAI,IAAI,WAAAA,QAAI,QAAQ,CAAC;AACzB,MAAI,MAAM,MAAM,EAAE,IAAI,KAAK;AAC7B,QAAM,QAAQ,CAAC,MAA0B,IAAI,QAAQ,CAAC,YAAY,WAAW,SAAS,CAAC,CAAC;AAEtF,IAAE,KAAM,MAAO,iBAAiB,EAAC,GAAE,MAAK,CAAC,EACxC,KAAK,OAAO,QAAW;AACtB,QAAG;AACL,eAAS,IAAS,GAAG,IAAI,KAAK,KAAI,GAAG;AACjC,cAAM,MAAM,GAAI;AAChB,YAAI,IAAI,KAAK,OAAO,MAAM,IAAI,KAAG,EAAE;AACnC,YAAI,IAAI,KAAK,OAAO,MAAM,IAAI,KAAG,EAAE;AACrC,cAAM,EAAE,KAAM,IAAI,eAAe,IAAI,iBAAkB,EAAC,GAAE,OAAO,IAAI,IAAI,GAAE,CAAC;AAAA,MAC9E;AACC,QAAE,KAAK,YAAW,EAAC,IAAI,IAAI,GAAE,CAAC;AAAA,IAC7B,SAAS,KAAP;AACA,QAAE,KAAK,aAAa;AAAA,IACtB;AAAA,EAEF,CAAC;AAEH;AACA,IAAO,gBAAQ;",
  "names": ["Chk"]
}
