{
  "version": 3,
  "sources": ["../../actions/info.ts"],
  "sourcesContent": ["import bigInt from \"big-integer\"\nimport { Api, TelegramClient } from \"telegram\"\nimport { NewMessageEvent } from \"telegram/events\"\nimport { sleep } from \"../strt\"\nimport Chk from \"../helpers/chk\"\n\nconst info = async (client: TelegramClient, e: NewMessageEvent, upt: any) => {\n    let y: any = new Chk(client, e)\n    const m = e.message\n    const chatId = m.chatId as import(\"big-integer\").BigInteger || m.peerId\n    // const messages = await client.getMessages(chatId)\n    // console.log(messages)\n    try {\n        let usr: any = await y.chk()\n        let ch: any;\n  \n        try {\n            ch = await client.invoke(\n                new Api.users.GetFullUser({\n                    id: usr,\n                })\n            )\n        } catch (error) {\n           if(!ch)\n           return y.edit(\"Sorry I can't find details you can use [ *init 9 ] command then again send your commands\")\n         }\n\n        const user: any = ch.users[0]\n        // await y.edit('yo')\n        // console.log(user)\n\n        const sent = await y.edit(`\n\uD835\uDDDC\uD835\uDDFB\uD835\uDDF3\uD835\uDDFC \uD835\uDDFC\uD835\uDDF3 \uD835\uDDE8\uD835\uDE00\uD835\uDDF2\uD835\uDDFF ${user.firstName}\n\n \uD835\uDDD9\uD835\uDDF6\uD835\uDDFF\uD835\uDE00\uD835\uDE01 \uD835\uDDE1\uD835\uDDEE\uD835\uDDFA\uD835\uDDF2: ${user.firstName}${user.lastName ? \"\\n \uD835\uDDDF\uD835\uDDEE\uD835\uDE00\uD835\uDE01 \uD835\uDDE1\uD835\uDDEE\uD835\uDDFA\uD835\uDDF2: \" + user.lastName : ''}\n \uD835\uDDE8\uD835\uDE00\uD835\uDDF2\uD835\uDDFF\uD835\uDDDC\uD835\uDDF1: ${user.id}${user.username ? '\\n \uD835\uDDE8\uD835\uDE00\uD835\uDDF2\uD835\uDDFF\uD835\uDDFB\uD835\uDDEE\uD835\uDDFA\uD835\uDDF2: @' + user.username : ''}\n \uD835\uDDE3\uD835\uDDFF\uD835\uDDF2\uD835\uDDFA\uD835\uDDF6\uD835\uDE02\uD835\uDDFA: ${user.premium == true ? JSON.stringify(user.premium) : \"No\"}${user.phone ? '\\n \uD835\uDDE3\uD835\uDDF5\uD835\uDDFC\uD835\uDDFB\uD835\uDDF2: ' + user.phone : ''}\n \uD835\uDDD9\uD835\uDDEE\uD835\uDDF8\uD835\uDDF2: ${user.fake == false ? 'No' : \"Yes\"}${user.scam != false ? '\\n Scammed: ' + JSON.stringify(user.scam) : ''}\n    `)\n// ${user.status != null && user.status.className == 'UserStatusOffline' ? \" \uD835\uDDE6\uD835\uDE01\uD835\uDDEE\uD835\uDE01\uD835\uDE02\uD835\uDE00: Offline\" : (user.status.className == 'UserStatusRecently' ? \" \uD835\uDDE6\uD835\uDE01\uD835\uDDEE\uD835\uDE01\uD835\uDE02\uD835\uDE00: Recent\" : ' \uD835\uDDE6\uD835\uDE01\uD835\uDDEE\uD835\uDE01\uD835\uDE02\uD835\uDE00: \uD835\uDDE2\uD835\uDDFB\uD835\uDDF9\uD835\uDDF6\uD835\uDDFB\uD835\uDDF2')}\n\n    } catch (error: any) {\n        console.log(\"info: \" + error.message)\n        \n    }\n}\n\nexport default info\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,sBAAoC;AAGpC,iBAAgB;AAEhB,MAAM,OAAO,OAAO,QAAwB,GAAoB,QAAa;AACzE,MAAI,IAAS,IAAI,WAAAA,QAAI,QAAQ,CAAC;AAC9B,QAAM,IAAI,EAAE;AACZ,QAAM,SAAS,EAAE,UAA8C,EAAE;AAGjE,MAAI;AACA,QAAI,MAAW,MAAM,EAAE,IAAI;AAC3B,QAAI;AAEJ,QAAI;AACA,WAAK,MAAM,OAAO;AAAA,QACd,IAAI,oBAAI,MAAM,YAAY;AAAA,UACtB,IAAI;AAAA,QACR,CAAC;AAAA,MACL;AAAA,IACJ,SAAS,OAAP;AACC,UAAG,CAAC;AACJ,eAAO,EAAE,KAAK,0FAA0F;AAAA,IAC1G;AAED,UAAM,OAAY,GAAG,MAAM;AAI3B,UAAM,OAAO,MAAM,EAAE,KAAK;AAAA,+FACT,KAAK;AAAA;AAAA,uFAEN,KAAK,YAAY,KAAK,WAAW,mFAA2B,KAAK,WAAW;AAAA,2DACnF,KAAK,KAAK,KAAK,WAAW,mFAA2B,KAAK,WAAW;AAAA,oEACnE,KAAK,WAAW,OAAO,KAAK,UAAU,KAAK,OAAO,IAAI,OAAO,KAAK,QAAQ,uDAAoB,KAAK,QAAQ;AAAA,yCACjH,KAAK,QAAQ,QAAQ,OAAO,QAAQ,KAAK,QAAQ,QAAQ,iBAAiB,KAAK,UAAU,KAAK,IAAI,IAAI;AAAA,KAC9G;AAAA,EAGD,SAAS,OAAP;AACE,YAAQ,IAAI,WAAW,MAAM,OAAO;AAAA,EAExC;AACJ;AAEA,IAAO,eAAQ;",
  "names": ["Chk"]
}
