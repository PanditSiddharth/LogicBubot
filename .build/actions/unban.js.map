{
  "version": 3,
  "sources": ["../../actions/unban.ts"],
  "sourcesContent": ["import { Api, TelegramClient } from \"telegram\"\nimport { NewMessage, NewMessageEvent } from \"telegram/events\"\nimport Chk from \"../helpers/chk\"\n\nconst unmute = async (client: TelegramClient, e: NewMessageEvent, upt: any) => {\n    const y = new Chk(client, e)\n    try {\n        const m = e.message\n        let user: any = await y.chk()\n\n        if (!m?.isChannel)\n            return await y.edit('This command is group/channels specific')\n\n            let lt: any; try {\n                lt = await client.invoke(\n                  new Api.channels.GetParticipant({\n                    channel: m?.peerId,\n                    participant: user,\n                  })\n                )\n              } catch (error) { }\n\n        if (lt && (lt.participant.className == \"ChannelParticipantCreator\" || lt.participant.className == \"ChannelParticipantAdmin\")) {\n            return await y.edit(`I can't unban User is admin`)\n        }\n\n        if (lt)\n            return await y.edit(`User is already unbanned`)\n\n        const result = await client.invoke(\n            new Api.channels.EditBanned({\n                channel: await y.chat(),\n                participant: user,\n                bannedRights: new Api.ChatBannedRights({\n                    untilDate: Math.floor(Date.now() / 1000), // 1/2 minutes from now\n                    viewMessages: false,\n                    sendMessages: false,\n                    sendMedia: false,\n                    sendStickers: false,\n                    sendGifs: false,\n                    sendGames: false,\n                    sendInline: false,\n                    sendPolls: false,\n                    changeInfo: false,\n                    inviteUsers: false,\n                    pinMessages: false,\n                }),\n            })\n        );\n\n        if (result)\n            await y.edit('User unbanned: ' + user);\n\n        // (tim ? \" \" + tim + \" seconds\" : \"\")\n\n    } catch (error: any) {\n        console.log(\"Unban: \" + error.message)\n        await y.gperr(error.message)\n    }\n}\n\nexport default unmute"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoC;AAEpC,iBAAgB;AAEhB,MAAM,SAAS,OAAO,QAAwB,GAAoB,QAAa;AAC3E,QAAM,IAAI,IAAI,WAAAA,QAAI,QAAQ,CAAC;AAC3B,MAAI;AACA,UAAM,IAAI,EAAE;AACZ,QAAI,OAAY,MAAM,EAAE,IAAI;AAE5B,QAAI,EAAC,uBAAG;AACJ,aAAO,MAAM,EAAE,KAAK,yCAAyC;AAE7D,QAAI;AAAS,QAAI;AACb,WAAK,MAAM,OAAO;AAAA,QAChB,IAAI,oBAAI,SAAS,eAAe;AAAA,UAC9B,SAAS,uBAAG;AAAA,UACZ,aAAa;AAAA,QACf,CAAC;AAAA,MACH;AAAA,IACF,SAAS,OAAP;AAAA,IAAgB;AAExB,QAAI,OAAO,GAAG,YAAY,aAAa,+BAA+B,GAAG,YAAY,aAAa,4BAA4B;AAC1H,aAAO,MAAM,EAAE,KAAK,6BAA6B;AAAA,IACrD;AAEA,QAAI;AACA,aAAO,MAAM,EAAE,KAAK,0BAA0B;AAElD,UAAM,SAAS,MAAM,OAAO;AAAA,MACxB,IAAI,oBAAI,SAAS,WAAW;AAAA,QACxB,SAAS,MAAM,EAAE,KAAK;AAAA,QACtB,aAAa;AAAA,QACb,cAAc,IAAI,oBAAI,iBAAiB;AAAA,UACnC,WAAW,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AAAA,UACvC,cAAc;AAAA,UACd,cAAc;AAAA,UACd,WAAW;AAAA,UACX,cAAc;AAAA,UACd,UAAU;AAAA,UACV,WAAW;AAAA,UACX,YAAY;AAAA,UACZ,WAAW;AAAA,UACX,YAAY;AAAA,UACZ,aAAa;AAAA,UACb,aAAa;AAAA,QACjB,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AAEA,QAAI;AACA,YAAM,EAAE,KAAK,oBAAoB,IAAI;AAAA,EAI7C,SAAS,OAAP;AACE,YAAQ,IAAI,YAAY,MAAM,OAAO;AACrC,UAAM,EAAE,MAAM,MAAM,OAAO;AAAA,EAC/B;AACJ;AAEA,IAAO,gBAAQ;",
  "names": ["Chk"]
}
